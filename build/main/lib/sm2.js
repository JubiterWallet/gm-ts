"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SM2 = void 0;
const hmac_drbg_1 = require("@stablelib/hmac-drbg");
const bn_js_1 = require("bn.js");
const elliptic_1 = require("elliptic");
const hash_js_1 = require("hash.js");
const signature_1 = require("./signature");
class SM2 extends elliptic_1.ec {
    constructor() {
        super(new elliptic_1.curves.PresetCurve({
            type: 'short',
            prime: null,
            p: 'FFFFFFFE FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF 00000000 FFFFFFFF FFFFFFFF',
            a: 'FFFFFFFE FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF 00000000 FFFFFFFF FFFFFFFC',
            b: '28E9FA9E 9D9F5E34 4D5A9E4B CF6509A7 F39789F5 15AB8F92 DDBCBD41 4D940E93',
            n: 'FFFFFFFE FFFFFFFF FFFFFFFF FFFFFFFF 7203DF6B 21C6052B 53BBF409 39D54123',
            hash: hash_js_1.sha256,
            gRed: false,
            g: [
                '32C4AE2C 1F198119 5F990446 6A39C994 8FE30BBF F2660BE1 715A4589 334C74C7',
                'BC3736A2 F4F6779C 59BDCEE3 6B692153 D0A9877C C62A4740 02DF32E5 2139F0A0',
            ],
        }));
    }
    sign(msg, key, ...options) {
        let [enc, opt] = options;
        if (typeof enc === 'object') {
            opt = enc;
            enc = null;
        }
        if (!opt) {
            opt = {};
        }
        opt = opt;
        key = this.keyFromPrivate(key, enc);
        // @ts-ignore("BN can use readonly number[]")
        msg = new bn_js_1.BN(msg);
        const n = this.n;
        const g = this.g;
        const ns1 = n.sub(new bn_js_1.BN(1));
        const drbg = new hmac_drbg_1.HMACDRBG();
        const d = key.getPrivate();
        for (let iter = 0;; iter++) {
            const k = opt.k || new bn_js_1.BN(drbg.randomBytes(n.byteLength()));
            if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) {
                continue;
            }
            const Q = g.mul(k);
            const x = Q.getX();
            const r = msg.add(x).umod(n);
            if (r.cmpn(0) === 0 || r.add(k).cmp(n) === 0) {
                continue;
            }
            let s = d
                .addn(1)
                .invm(n)
                .mul(k.sub(r.mul(d).umod(n)))
                .umod(n);
            if (s.isZero()) {
                continue;
            }
            let recoveryParam = (Q.getY().isOdd() ? 1 : 0) | (Q.getX().cmp(r) !== 0 ? 2 : 0);
            if (opt.canonical && s.cmp(this.nh) > 0) {
                s = n.sub(s);
                recoveryParam ^= 1;
            }
            return new signature_1.Signature({ r, s, recoveryParam });
        }
    }
    verify(msg, signature, key, enc) {
        // @ts-ignore("BN can use readonly number[]")
        msg = new bn_js_1.BN(msg);
        const sig = new signature_1.Signature(signature, 'hex');
        const P = this.keyFromPublic(key, enc).getPublic();
        const r = sig.r;
        const s = sig.s;
        const n = this.n;
        const g = this.g;
        // 1 < r < n-1
        if (r.cmpn(1) < 0 || r.cmp(n) >= 0) {
            return false;
        }
        // 1 < s < n-1
        if (s.cmpn(1) < 0 || r.cmp(n) >= 0) {
            return false;
        }
        // t = (r + s)mod n
        const t = r.add(s).umod(n);
        if (t.cmpn(0) === 0) {
            return false;
        }
        // s*G + t*P
        const Q = g.mul(s).add(P.mul(t));
        const x = Q.getX();
        const R = msg.add(x).umod(n);
        return r.cmp(R) === 0;
    }
}
exports.SM2 = SM2;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic20yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2xpYi9zbTIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsb0RBQWdEO0FBQ2hELGlDQUEyQjtBQUMzQix1Q0FBc0U7QUFDdEUscUNBQWlDO0FBRWpDLDJDQUF3QztBQUV4QyxNQUFhLEdBQUksU0FBUSxhQUFFO0lBQ3pCO1FBQ0UsS0FBSyxDQUNILElBQUksaUJBQU0sQ0FBQyxXQUFXLENBQUM7WUFDckIsSUFBSSxFQUFFLE9BQU87WUFDYixLQUFLLEVBQUUsSUFBSTtZQUNYLENBQUMsRUFBRSx5RUFBeUU7WUFDNUUsQ0FBQyxFQUFFLHlFQUF5RTtZQUM1RSxDQUFDLEVBQUUseUVBQXlFO1lBQzVFLENBQUMsRUFBRSx5RUFBeUU7WUFDNUUsSUFBSSxFQUFFLGdCQUFNO1lBQ1osSUFBSSxFQUFFLEtBQUs7WUFDWCxDQUFDLEVBQUU7Z0JBQ0QseUVBQXlFO2dCQUN6RSx5RUFBeUU7YUFDMUU7U0FDRixDQUFDLENBQ0gsQ0FBQztJQUNKLENBQUM7SUFjRCxJQUFJLENBQUMsR0FBWSxFQUFFLEdBQXdCLEVBQUUsR0FBRyxPQUFZO1FBQzFELElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQ3pCLElBQUksT0FBTyxHQUFHLEtBQUssUUFBUSxFQUFFO1lBQzNCLEdBQUcsR0FBRyxHQUFHLENBQUM7WUFDVixHQUFHLEdBQUcsSUFBSSxDQUFDO1NBQ1o7UUFDRCxJQUFJLENBQUMsR0FBRyxFQUFFO1lBQ1IsR0FBRyxHQUFHLEVBQUUsQ0FBQztTQUNWO1FBRUQsR0FBRyxHQUFHLEdBQXFCLENBQUM7UUFDNUIsR0FBRyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQ3BDLDZDQUE2QztRQUM3QyxHQUFHLEdBQUcsSUFBSSxVQUFFLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDbEIsTUFBTSxD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